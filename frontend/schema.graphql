# This file was generated based on ".graphqlconfig". Do not edit manually.

schema {
    query: Query
    mutation: Mutation
    subscription: Subscription
}

type LoginData {
    accessToken: String
}

type Mutation {
    addMessage(chatId: MongoID!, message: String!): String
    login(password: String!, username: String!): LoginData
}

type Query {
    chats(
        #Filter by fields
        filter: FilterFindManychatInput,
        limit: Int = 1000,
        skip: Int,
        sort: SortFindManychatInput
    ): [chat]
    me: user
    users(
        #Filter by fields
        filter: FilterFindManyuserInput,
        limit: Int = 1000,
        skip: Int,
        sort: SortFindManyuserInput
    ): [user]
}

type Subscription {
    messageAdded: MongoID
}

type chat {
    _id: MongoID!
    messages: [chatMessages]
}

type chatMessages {
    _id: MongoID
    createdAt: Date
    message: String
    sender: user
    senderId: MongoID
    updatedAt: Date
}

type user {
    _id: MongoID!
    createdAt: Date
    fullname: String
    password: String
    type: Float
    updatedAt: Date
    username: String
}

enum SortFindManychatInput {
    _ID_ASC
    _ID_DESC
}

enum SortFindManyuserInput {
    _ID_ASC
    _ID_DESC
}

input FilterFindManychatInput {
    AND: [FilterFindManychatInput!]
    OR: [FilterFindManychatInput!]
    _id: MongoID
    _ids: [MongoID]
    "List of *indexed* fields that can be filtered via operators."
    _operators: OperatorsFilterFindManychatInput
    messages: [chatMessagesInput]
}

input FilterFindManyuserInput {
    AND: [FilterFindManyuserInput!]
    OR: [FilterFindManyuserInput!]
    _id: MongoID
    _ids: [MongoID]
    "List of *indexed* fields that can be filtered via operators."
    _operators: OperatorsFilterFindManyuserInput
    createdAt: Date
    fullname: String
    password: String
    type: Float
    updatedAt: Date
    username: String
}

"For performance reason this type contains only *indexed* fields."
input OperatorsFilterFindManychatInput {
    _id: _idOperatorsFilterFindManychatInput
}

"For performance reason this type contains only *indexed* fields."
input OperatorsFilterFindManyuserInput {
    _id: _idOperatorsFilterFindManyuserInput
}

input _idOperatorsFilterFindManychatInput {
    gt: MongoID
    gte: MongoID
    in: [MongoID]
    lt: MongoID
    lte: MongoID
    ne: MongoID
    nin: [MongoID]
}

input _idOperatorsFilterFindManyuserInput {
    gt: MongoID
    gte: MongoID
    in: [MongoID]
    lt: MongoID
    lte: MongoID
    ne: MongoID
    nin: [MongoID]
}

input chatMessagesInput {
    _id: MongoID
    createdAt: Date
    message: String
    senderId: MongoID
    updatedAt: Date
}


"The `ID` scalar type represents a unique MongoDB identifier in collection. MongoDB by default use 12-byte ObjectId value (https://docs.mongodb.com/manual/reference/bson-types/#objectid). But MongoDB also may accepts string or integer as correct values for _id field."
scalar MongoID

scalar Date